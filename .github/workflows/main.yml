name: Build container and run VISE API testing

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Which service to test"
        required: true
        default: "python"
        type: choice
        options: [python, node]
      PORT:
        description: "Host port to expose"
        required: true
        default: "8000"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decide build context / dockerfile / container port
        id: cfg
        run: |
          # Ajusta estos paths si tienes los Dockerfiles en carpetas distintas
          if [ "${{ inputs.service }}" = "python" ]; then
            echo "dockerfile=Dockerfile" >> $GITHUB_OUTPUT   
            echo "context=."             >> $GITHUB_OUTPUT   
            echo "container_port=8000"   >> $GITHUB_OUTPUT
          else
            echo "dockerfile=Dockerfile"    >> $GITHUB_OUTPUT   
            echo "context=."                >> $GITHUB_OUTPUT   
            echo "container_port=3000"      >> $GITHUB_OUTPUT
          fi

      - name: Setup docker
        uses: docker/setup-buildx-action@v3

      - name: Build docker image
        run: |
          docker build \
            -f "${{ steps.cfg.outputs.dockerfile }}" \
            -t vise-api:latest \
            "${{ steps.cfg.outputs.context }}"

      - name: Run container
        run: |
          docker run -d --name vise-api \
            -p ${{ inputs.PORT }}:${{ steps.cfg.outputs.container_port }} \
            vise-api:latest

      - name: Wait for /health
        run: |
          set -e
          for i in {1..40}; do
            if curl -fsS "http://localhost:${{ inputs.PORT }}/health" >/dev/null; then
              echo "API is healthy"; exit 0
            fi
            sleep 1
          done
          echo "::error::API did not become healthy in time"
          echo "--- docker ps ---"; docker ps -a || true
          echo "--- container logs ---"; docker logs vise-api || true
          exit 1

      - name: Install Hurl
        uses: gacts/install-hurl@v1

      - name: Test API (Hurl)
        run: hurl --variable host=http://localhost:${{ inputs.PORT }} --error-format long --test session.hurl

      - name: Always show logs at the end
        if: always()
        run: docker logs vise-api || true

      - name: Stop container
        if: always()
        run: docker rm -f vise-api
